function Resource(name, abundance, price) {
  return {
	qty: 0,
	price: price,
	name: name,
	abundance: abundance
  }
}

var game = {
  upgradeButton: document.createElement ("button"),
  sellButton: document.createElement ("button"),
  autoclickButton: document.createElement ("button"),
  CPCMeter: document.createElement ("p"),
  moneyMeter: document.createElement ("p"),
  resDisplay: {
  },
  craftButtons: {
  },
  resImages: {
  },
  crafts: {
	steel: {
	  name: 'steel',
	  type: 'furnace',
	  input: [
		{
		  res: 'anthracite',
		  n: 1500
		},
		{
		  res: 'hematite',
		  n: 750
		}
	  ],
	  output: [
		{
		  res: 'steel',
		  n: 1000
		}
	  ]
	},
	copper: {
	  name: 'copper',
	  type: 'furnace',
	  input: [
		{
		  res: 'anthracite',
		  n: 1500
		},
		{
		  res: 'malachite',
		  n: 900
		}
	  ],
	  output: [
		{
		  res: 'copper',
		  n: 500
		}
	  ]
	}
  },

  res: {
	/* mined */

	anthracite: Resource("anthracite", 0.5, 0.01),
	malachite: Resource("malachite", 0.3, 0.02),
	hematite: Resource("hematite", 0.2, 0.03),
	
	/* crafted */

	steel: Resource("steel", 0, 0.05),
	copper: Resource("copper", 0, 0.1)
  },
  money: 0,

  click_base: 10,
  click_level: 0,
  click_pow: 1.1,
  click_cost_pow: 1.2,
  click_cost_base: 1,
  autoclickers: 0,
  autoclick_cost_pow: 1.5,
  autoclick_cost_base: 10
};

function formatMass(qty) {
  var unitList = ["g", "kg", "t", "kt", "Mt", "Gt", "Tt"];
  var unitIndex = Math.floor(Math.log10(qty) / 3);
  var unit = unitList[unitIndex];
  return (qty / Math.pow(10, unitIndex * 3)).toFixed(2) + "&nbsp;" + unit;
}

function formatMoney(qty) {
  if (qty <= 0) {
	return "0&nbsp;&euro;";
  }
  var prefixList = ["", "k", "M", "G", "T"];
  var prefixIndex = Math.floor(Math.log10(qty) / 3);
  var prefix = prefixList[prefixIndex];
  return (qty / Math.pow(10, prefixIndex * 3)).toFixed(2) + "&nbsp;" + prefix + "&euro;";
}

function updateResourceDisplay() {
  for (var res in game.res) {
	if (game.res[res].qty <= 0) {
	  game.resDisplay[res].style.display = "none";
	} else {
	  game.resDisplay[res].style.display = "inline-block";
	  document.getElementById(res+"-num").innerHTML = formatMass(game.res[res].qty);
	}
  }
  game.moneyMeter.innerHTML = formatMoney(game.money);
  game.CPCMeter.innerHTML = "Resources per click: " + getResPerClick();
  game.upgradeButton.innerHTML = "Upgrade resources per click: " + formatMoney(getUpdateCost());
  game.autoclickButton.innerHTML = "Buy an autoclicker: " + formatMoney(getAutoclickCost());
}

function craft(craftName) {
  craftObj = game.crafts[craftName];
  for (var i in craftObj.input) {
	var res = craftObj.input[i].res;
	if (game.res[res].qty < craftObj.input[i].n){
	  /* TODO: error message? */
	  return;
	}
  }
  for (var i in craftObj.input) {
	var res = craftObj.input[i].res;
	game.res[res].qty -= craftObj.input[i].n;
  }
  for (var i in craftObj.output) {
	var res = craftObj.output[i].res;
	game.res[res].qty += craftObj.output[i].n;
  }
  updateResourceDisplay();
}

function getResPerClick() {
  return Math.floor(game.click_base * Math.pow(game.click_pow, game.click_level));
}

function getUpdateCost() {
  return Math.floor(game.click_cost_base * Math.pow(game.click_cost_pow, game.click_level));
}

function getAutoclickCost() {
  return game.autoclick_cost_base * Math.pow(game.autoclick_cost_pow, game.autoclickers);
}

function click (n) {
  // Also update the text labels.
  for (var res in game.res) {
	game.res[res].qty += n * Math.round(getResPerClick() * game.res[res].abundance);
  }
  updateResourceDisplay();
}

function upgrade () {
  if (game.money >= getUpdateCost()) {
	game.money -= getUpdateCost();
	game.click_level += 1;
  }
  updateResourceDisplay();
}

function buyAutoclick() {
  if (game.money >= getAutoclickCost()) {
	game.money -= getAutoclickCost();
	++game.autoclickers;
  }
}

function sell () {
  for (var res in game.res) {
	game.money += game.res[res].qty * game.res[res].price;
	game.res[res].qty = 0;
  }
  updateResourceDisplay();
}

function start () {
  // The actual clicker part.
  for (var res in game.res) {
	game.resDisplay[res] = document.createElement ("div");
  }

  for (var c in game.crafts) {
	game.craftButtons[c] = document.createElement ("button");
  }
  game.sellButton.innerHTML = "sell";
  document.getElementById("buttons").appendChild (game.upgradeButton);
  document.getElementById("buttons").appendChild (game.autoclickButton);
  document.getElementById("buttons").appendChild (game.sellButton);
  document.getElementById("rock-button").onclick = function () { click(1); };
  game.sellButton.onclick = sell;
  game.upgradeButton.onclick = upgrade;
  game.autoclickButton.onclick = buyAutoclick;

  // Displays.
  document.body.appendChild (game.moneyMeter);
  document.getElementById("money-display").appendChild (game.moneyMeter);
  for (var res in game.res) {
	var resNum = document.createElement("span");
	var resName = document.createElement("span");
	resName.innerHTML = res;
	resNum.id = res+"-num";
	game.resImages[res] = document.createElement("img");
	game.resImages[res].src = "res/" + game.res[res].name + ".png";
	game.resImages[res].classList.add("res-img");
	game.resDisplay[res].appendChild(game.resImages[res]);
	game.resDisplay[res].appendChild(document.createElement("br"));
	game.resDisplay[res].appendChild(resName);
	game.resDisplay[res].appendChild(document.createElement("br"));
	game.resDisplay[res].appendChild(resNum);
	game.resDisplay[res].classList.add("res-box");
	document.getElementById("resource-display").appendChild (game.resDisplay[res]);
  }

  for (var c in game.crafts) {
	game.craftButtons[c].innerHTML = game.crafts[c].name;
	game.craftButtons[c].onclick = craft.bind(null, c.slice())
	document.getElementById("craft-display").appendChild(game.craftButtons[c]);
  }

  // Upgrades.
  updateResourceDisplay();
  setInterval(function() { click(game.autoclickers);}, 200);
}
